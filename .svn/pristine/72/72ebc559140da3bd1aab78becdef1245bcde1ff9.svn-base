package org.yonder.service;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.yonder.entity.Address;
import org.yonder.entity.Person;

public class PersonServiceTest {
	private SessionFactory sessionFactory;
	private Session session;
	
	PersonServiceImpl personService = new PersonServiceImpl();

	private SessionFactory createSessionFactory() {

		Configuration configuration = new Configuration();

		configuration.addAnnotatedClass(Person.class).addAnnotatedClass(Address.class);
		configuration.setProperty("hibernate.connection.url", "jdbc:mysql://localhost:3306/pip_db");
		configuration.setProperty("hibernate.connection.username", "root");
		configuration.setProperty("hibernate.connection.password", "pass");
		configuration.setProperty("hibernate.dialect", "org.hibernate.dialect.MySQLDialect");
		configuration.setProperty("hibernate.connection.driver_class", "com.mysql.jdbc.Driver");
		configuration.setProperty("hibernate.hbm2ddl.auto", "update");
		configuration.setProperty("hibernate.show.sql", "false");
		SessionFactory sessionFactory = configuration.buildSessionFactory();
		return sessionFactory;
	}

	@Before
	public void before() {
		sessionFactory = createSessionFactory();
		session = sessionFactory.openSession();
		Transaction transaction = session.beginTransaction();
	}
	
	@Test
	public void testAddPerson() {
		personService.setCurrentSession(session);
		
		Person adaugat = new Person();
		
		adaugat.setName("Adaugat");
		adaugat.setAge(22);
		adaugat.setOccupation("doardetest");
		
		personService.addPerson(adaugat);
		
		Person person = personService.getPersonByName("Adaugat");
		
		Assert.assertEquals("doardetest", person.getOccupation());
	}
	
	@Test
	public void testDeletePerson() {
		personService.setCurrentSession(session);
		
		personService.deletePerson(4);
		Person person = personService.getPersonById(4);
		Assert.assertNull(person);
	}
	
	@Test
	public void testGetPersonById() {
		personService.setCurrentSession(session);
		
		Person person = personService.getPersonById(1);
		
		Assert.assertEquals("Daniel", person.getName());
		
	}

	@Test
	public void testGetPersonByName() {
		personService.setCurrentSession(session);

		Person person = personService.getPersonByName("Daniel");

		Assert.assertEquals("Padawan", person.getOccupation());

	}

	@After
	public void after() {
		if (session.isOpen()) {
			session.close();
		}
		sessionFactory.close();
	}
}
